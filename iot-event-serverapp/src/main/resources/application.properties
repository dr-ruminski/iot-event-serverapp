# JPA creates and drops tables and sequences, loads import.sql
spring.jpa.hibernate.ddl-auto=create-drop
spring.main.allow-bean-definition-overriding=true

# Datasource settings (H2)
spring.h2.console.enabled=true
spring.datasource.url=jdbc:h2:~/devIoTDB;MV_STORE=false
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driver-class-name=org.h2.Driver


# logging
#logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type=INFO


# RabitMQ
# https://github.com/spring-projects/spring-boot/blob/v2.3.3.RELEASE/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitProperties.java
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.connection-timeout=1000
spring.rabbitmq.listener.simple.batch-size=5
#spring.rabbitmq.username=admin
#spring.rabbitmq.password=!@##@!


# output to a file
logging.file.name=iot-server.log
logging.pattern.file=%d %p %c{1.} [%t] %m%n


# temp folder example
#logging.file=${java.io.tmpdir}/app.log


## if no active profile, default is 'default'
#spring.profiles.active=dev
#spring.profiles.active=dev


# root level
logging.level.=INFO
logging.level.reactor.netty.http.client=DEBUG
#logging.level.org.springframework=DEBUG




